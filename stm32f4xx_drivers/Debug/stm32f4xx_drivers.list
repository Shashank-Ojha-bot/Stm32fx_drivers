
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000078c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000934  08000934  00010934  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000940  08000940  00010948  2**0
                  CONTENTS
  4 .ARM          00000000  08000940  08000940  00010948  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000940  08000948  00010948  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000940  08000940  00010940  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000944  08000944  00010944  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010948  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000948  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000948  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010948  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001647  00000000  00000000  00010972  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000003f5  00000000  00000000  00011fb9  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000118  00000000  00000000  000123b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000e0  00000000  00000000  000124c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002317  00000000  00000000  000125a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000118f  00000000  00000000  000148bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00008fd6  00000000  00000000  00015a4e  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001ea24  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000038c  00000000  00000000  0001eaa0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800091c 	.word	0x0800091c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800091c 	.word	0x0800091c

080001e8 <strlen>:
 80001e8:	4603      	mov	r3, r0
 80001ea:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ee:	2a00      	cmp	r2, #0
 80001f0:	d1fb      	bne.n	80001ea <strlen+0x2>
 80001f2:	1a18      	subs	r0, r3, r0
 80001f4:	3801      	subs	r0, #1
 80001f6:	4770      	bx	lr

080001f8 <SPI2_GPIO_Inits>:
 */

#include "stm32f407xx.h"
#include<string.h>
void SPI2_GPIO_Inits()
{
 80001f8:	b580      	push	{r7, lr}
 80001fa:	b084      	sub	sp, #16
 80001fc:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPIpins;
	SPIpins.pGPIOx=GPIOB;
 80001fe:	4b11      	ldr	r3, [pc, #68]	; (8000244 <SPI2_GPIO_Inits+0x4c>)
 8000200:	607b      	str	r3, [r7, #4]
	SPIpins.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_ALTFN;
 8000202:	2302      	movs	r3, #2
 8000204:	727b      	strb	r3, [r7, #9]
	SPIpins.GPIO_PinConfig.GPIO_PinAltFunMode=5;
 8000206:	2305      	movs	r3, #5
 8000208:	737b      	strb	r3, [r7, #13]
	SPIpins.GPIO_PinConfig.GPIO_PinOpType=GPIO_OP_TYPE_PP;
 800020a:	2300      	movs	r3, #0
 800020c:	733b      	strb	r3, [r7, #12]
	SPIpins.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PUPD;
 800020e:	2300      	movs	r3, #0
 8000210:	72fb      	strb	r3, [r7, #11]
	SPIpins.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_HIGH;
 8000212:	2303      	movs	r3, #3
 8000214:	72bb      	strb	r3, [r7, #10]
	//MOSI
	SPIpins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_15;
 8000216:	230f      	movs	r3, #15
 8000218:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIpins);
 800021a:	1d3b      	adds	r3, r7, #4
 800021c:	4618      	mov	r0, r3
 800021e:	f000 f882 	bl	8000326 <GPIO_Init>
	//MISO
	/*SPIpins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_14;
	GPIO_Init(&SPIpins);*/
	//SCLk
	SPIpins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_13;
 8000222:	230d      	movs	r3, #13
 8000224:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIpins);
 8000226:	1d3b      	adds	r3, r7, #4
 8000228:	4618      	mov	r0, r3
 800022a:	f000 f87c 	bl	8000326 <GPIO_Init>
	//NSS
	SPIpins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_12;
 800022e:	230c      	movs	r3, #12
 8000230:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIpins);
 8000232:	1d3b      	adds	r3, r7, #4
 8000234:	4618      	mov	r0, r3
 8000236:	f000 f876 	bl	8000326 <GPIO_Init>
}
 800023a:	bf00      	nop
 800023c:	3710      	adds	r7, #16
 800023e:	46bd      	mov	sp, r7
 8000240:	bd80      	pop	{r7, pc}
 8000242:	bf00      	nop
 8000244:	40020400 	.word	0x40020400

08000248 <SPI2_Inits>:
void SPI2_Inits()
{
 8000248:	b580      	push	{r7, lr}
 800024a:	b084      	sub	sp, #16
 800024c:	af00      	add	r7, sp, #0
	SPI_Handle_t SPIpins;
	SPIpins.pSPIx=SPI2;
 800024e:	4b0c      	ldr	r3, [pc, #48]	; (8000280 <SPI2_Inits+0x38>)
 8000250:	607b      	str	r3, [r7, #4]
	SPIpins.SPI_PinConfig.SPI_BusConfig=SPI_BusConfig_FD;
 8000252:	2300      	movs	r3, #0
 8000254:	727b      	strb	r3, [r7, #9]
	SPIpins.SPI_PinConfig.SPI_CPHA=SPI_CPHA_Low;
 8000256:	2300      	movs	r3, #0
 8000258:	72fb      	strb	r3, [r7, #11]
	SPIpins.SPI_PinConfig.SPI_CPOL=SPI_CPOL_Low;
 800025a:	2300      	movs	r3, #0
 800025c:	733b      	strb	r3, [r7, #12]
	SPIpins.SPI_PinConfig.SPI_DFF=SPI_DFF_8bits;
 800025e:	2300      	movs	r3, #0
 8000260:	72bb      	strb	r3, [r7, #10]
	SPIpins.SPI_PinConfig.SPI_DeviceMode=SPI_DeviceMode_Master;
 8000262:	2300      	movs	r3, #0
 8000264:	723b      	strb	r3, [r7, #8]
	SPIpins.SPI_PinConfig.SPI_SclkSpeed=SPI_SCLK_Speed_div8;
 8000266:	2302      	movs	r3, #2
 8000268:	73bb      	strb	r3, [r7, #14]
	SPIpins.SPI_PinConfig.SPI_SSM=SPI_SSM_DI;
 800026a:	2300      	movs	r3, #0
 800026c:	737b      	strb	r3, [r7, #13]
	SPI_Init(&SPIpins);
 800026e:	1d3b      	adds	r3, r7, #4
 8000270:	4618      	mov	r0, r3
 8000272:	f000 fa11 	bl	8000698 <SPI_Init>
}
 8000276:	bf00      	nop
 8000278:	3710      	adds	r7, #16
 800027a:	46bd      	mov	sp, r7
 800027c:	bd80      	pop	{r7, pc}
 800027e:	bf00      	nop
 8000280:	40003bff 	.word	0x40003bff

08000284 <main>:
int main()
{
 8000284:	b580      	push	{r7, lr}
 8000286:	b084      	sub	sp, #16
 8000288:	af00      	add	r7, sp, #0
	char user_data[]="hello world";
 800028a:	4a10      	ldr	r2, [pc, #64]	; (80002cc <main+0x48>)
 800028c:	1d3b      	adds	r3, r7, #4
 800028e:	ca07      	ldmia	r2, {r0, r1, r2}
 8000290:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	//This function is used to make GPIO pins as SPI pins
	SPI2_GPIO_Inits();
 8000294:	f7ff ffb0 	bl	80001f8 <SPI2_GPIO_Inits>

	//This function is used to configure the SPI2 peripheral
	SPI2_Inits();
 8000298:	f7ff ffd6 	bl	8000248 <SPI2_Inits>
	//This function will set the ssoe bit of cr2 register
	//when ssoe=1
	//NSS=0;SPE=1
	//NSS=1;SPE=0

	SPI_SSOE_config(SPI2,ENABLE);
 800029c:	2101      	movs	r1, #1
 800029e:	480c      	ldr	r0, [pc, #48]	; (80002d0 <main+0x4c>)
 80002a0:	f000 fafd 	bl	800089e <SPI_SSOE_config>

	//Enable the SPI2 peripheral
	SPI_peripheral_control(SPI2,ENABLE);
 80002a4:	2101      	movs	r1, #1
 80002a6:	480a      	ldr	r0, [pc, #40]	; (80002d0 <main+0x4c>)
 80002a8:	f000 fade 	bl	8000868 <SPI_peripheral_control>

	SPI_SendData(SPI2,(uint8_t*)user_data,strlen(user_data));
 80002ac:	1d3b      	adds	r3, r7, #4
 80002ae:	4618      	mov	r0, r3
 80002b0:	f7ff ff9a 	bl	80001e8 <strlen>
 80002b4:	4602      	mov	r2, r0
 80002b6:	1d3b      	adds	r3, r7, #4
 80002b8:	4619      	mov	r1, r3
 80002ba:	4805      	ldr	r0, [pc, #20]	; (80002d0 <main+0x4c>)
 80002bc:	f000 fa9e 	bl	80007fc <SPI_SendData>

	//Disable the SPI2 peripheral after the data is sent

	SPI_peripheral_control(SPI2,DISABLE);
 80002c0:	2100      	movs	r1, #0
 80002c2:	4803      	ldr	r0, [pc, #12]	; (80002d0 <main+0x4c>)
 80002c4:	f000 fad0 	bl	8000868 <SPI_peripheral_control>

	while(1);
 80002c8:	e7fe      	b.n	80002c8 <main+0x44>
 80002ca:	bf00      	nop
 80002cc:	08000934 	.word	0x08000934
 80002d0:	40003bff 	.word	0x40003bff

080002d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002d4:	480d      	ldr	r0, [pc, #52]	; (800030c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002d6:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002d8:	480d      	ldr	r0, [pc, #52]	; (8000310 <LoopForever+0x6>)
  ldr r1, =_edata
 80002da:	490e      	ldr	r1, [pc, #56]	; (8000314 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002dc:	4a0e      	ldr	r2, [pc, #56]	; (8000318 <LoopForever+0xe>)
  movs r3, #0
 80002de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002e0:	e002      	b.n	80002e8 <LoopCopyDataInit>

080002e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002e6:	3304      	adds	r3, #4

080002e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002ec:	d3f9      	bcc.n	80002e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ee:	4a0b      	ldr	r2, [pc, #44]	; (800031c <LoopForever+0x12>)
  ldr r4, =_ebss
 80002f0:	4c0b      	ldr	r4, [pc, #44]	; (8000320 <LoopForever+0x16>)
  movs r3, #0
 80002f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002f4:	e001      	b.n	80002fa <LoopFillZerobss>

080002f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002f8:	3204      	adds	r2, #4

080002fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002fc:	d3fb      	bcc.n	80002f6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002fe:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000302:	f000 fae7 	bl	80008d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000306:	f7ff ffbd 	bl	8000284 <main>

0800030a <LoopForever>:

LoopForever:
    b LoopForever
 800030a:	e7fe      	b.n	800030a <LoopForever>
  ldr   r0, =_estack
 800030c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000310:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000314:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000318:	08000948 	.word	0x08000948
  ldr r2, =_sbss
 800031c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000320:	2000001c 	.word	0x2000001c

08000324 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000324:	e7fe      	b.n	8000324 <ADC_IRQHandler>

08000326 <GPIO_Init>:
  @return                  -none

  @Note                    -none
 */
void GPIO_Init(GPIO_Handle_t* pGpioHandle)
{
 8000326:	b580      	push	{r7, lr}
 8000328:	b084      	sub	sp, #16
 800032a:	af00      	add	r7, sp, #0
 800032c:	6078      	str	r0, [r7, #4]
	/*Enabling the peripheral clock*/
	GPIO_PeriClockControl(pGpioHandle->pGPIOx, ENABLE);
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	2101      	movs	r1, #1
 8000334:	4618      	mov	r0, r3
 8000336:	f000 f8c7 	bl	80004c8 <GPIO_PeriClockControl>
	uint32_t temp;
	/*Initializing mode of GPIO*/
	if(pGpioHandle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_ANALOG)
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	795b      	ldrb	r3, [r3, #5]
 800033e:	2b03      	cmp	r3, #3
 8000340:	d81e      	bhi.n	8000380 <GPIO_Init+0x5a>
	{/*Non Interrupt modes*/

		temp=pGpioHandle->GPIO_PinConfig.GPIO_PinMode<<(2*pGpioHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	795b      	ldrb	r3, [r3, #5]
 8000346:	461a      	mov	r2, r3
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	791b      	ldrb	r3, [r3, #4]
 800034c:	005b      	lsls	r3, r3, #1
 800034e:	fa02 f303 	lsl.w	r3, r2, r3
 8000352:	60fb      	str	r3, [r7, #12]
		pGpioHandle->pGPIOx->MODER&=~(0x3<<pGpioHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	681a      	ldr	r2, [r3, #0]
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	791b      	ldrb	r3, [r3, #4]
 800035e:	4619      	mov	r1, r3
 8000360:	2303      	movs	r3, #3
 8000362:	408b      	lsls	r3, r1
 8000364:	43db      	mvns	r3, r3
 8000366:	4619      	mov	r1, r3
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	400a      	ands	r2, r1
 800036e:	601a      	str	r2, [r3, #0]
		pGpioHandle->pGPIOx->MODER|=temp;
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	6819      	ldr	r1, [r3, #0]
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	68fa      	ldr	r2, [r7, #12]
 800037c:	430a      	orrs	r2, r1
 800037e:	601a      	str	r2, [r3, #0]
	}
	else
	{/*Interrupt modes*/

	}
	temp=0;
 8000380:	2300      	movs	r3, #0
 8000382:	60fb      	str	r3, [r7, #12]

	/*Initializing speed of GPIO*/

	temp=pGpioHandle->GPIO_PinConfig.GPIO_PinSpeed<<(2*pGpioHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	799b      	ldrb	r3, [r3, #6]
 8000388:	461a      	mov	r2, r3
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	791b      	ldrb	r3, [r3, #4]
 800038e:	005b      	lsls	r3, r3, #1
 8000390:	fa02 f303 	lsl.w	r3, r2, r3
 8000394:	60fb      	str	r3, [r7, #12]
	pGpioHandle->pGPIOx->OSPEEDR&=~(0x3<<pGpioHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	689a      	ldr	r2, [r3, #8]
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	791b      	ldrb	r3, [r3, #4]
 80003a0:	4619      	mov	r1, r3
 80003a2:	2303      	movs	r3, #3
 80003a4:	408b      	lsls	r3, r1
 80003a6:	43db      	mvns	r3, r3
 80003a8:	4619      	mov	r1, r3
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	400a      	ands	r2, r1
 80003b0:	609a      	str	r2, [r3, #8]
	pGpioHandle->pGPIOx->OSPEEDR|=temp;
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	6899      	ldr	r1, [r3, #8]
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	68fa      	ldr	r2, [r7, #12]
 80003be:	430a      	orrs	r2, r1
 80003c0:	609a      	str	r2, [r3, #8]
	temp=0;
 80003c2:	2300      	movs	r3, #0
 80003c4:	60fb      	str	r3, [r7, #12]

	/*Initializing output type of GPIO*/

	if(pGpioHandle->pGPIOx->MODER==GPIO_MODE_OUT)
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	2b01      	cmp	r3, #1
 80003ce:	d11f      	bne.n	8000410 <GPIO_Init+0xea>
	{
		temp=pGpioHandle->GPIO_PinConfig.GPIO_PinOpType<<pGpioHandle->GPIO_PinConfig.GPIO_PinNumber;
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	7a1b      	ldrb	r3, [r3, #8]
 80003d4:	461a      	mov	r2, r3
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	791b      	ldrb	r3, [r3, #4]
 80003da:	fa02 f303 	lsl.w	r3, r2, r3
 80003de:	60fb      	str	r3, [r7, #12]
		pGpioHandle->pGPIOx->OTYPER&=~(0x1<<pGpioHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	685a      	ldr	r2, [r3, #4]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	791b      	ldrb	r3, [r3, #4]
 80003ea:	4619      	mov	r1, r3
 80003ec:	2301      	movs	r3, #1
 80003ee:	408b      	lsls	r3, r1
 80003f0:	43db      	mvns	r3, r3
 80003f2:	4619      	mov	r1, r3
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	400a      	ands	r2, r1
 80003fa:	605a      	str	r2, [r3, #4]
		pGpioHandle->pGPIOx->OTYPER|=temp;
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	6859      	ldr	r1, [r3, #4]
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	68fa      	ldr	r2, [r7, #12]
 8000408:	430a      	orrs	r2, r1
 800040a:	605a      	str	r2, [r3, #4]
		temp=0;
 800040c:	2300      	movs	r3, #0
 800040e:	60fb      	str	r3, [r7, #12]
	}

	/*Initializing internal pull up/pull down registers of GPIO*/

	temp=pGpioHandle->GPIO_PinConfig.GPIO_PinPuPdControl<<(2*pGpioHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	79db      	ldrb	r3, [r3, #7]
 8000414:	461a      	mov	r2, r3
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	791b      	ldrb	r3, [r3, #4]
 800041a:	005b      	lsls	r3, r3, #1
 800041c:	fa02 f303 	lsl.w	r3, r2, r3
 8000420:	60fb      	str	r3, [r7, #12]
	pGpioHandle->pGPIOx->PUPDR&=~(0x3<<pGpioHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	681b      	ldr	r3, [r3, #0]
 8000426:	68da      	ldr	r2, [r3, #12]
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	791b      	ldrb	r3, [r3, #4]
 800042c:	4619      	mov	r1, r3
 800042e:	2303      	movs	r3, #3
 8000430:	408b      	lsls	r3, r1
 8000432:	43db      	mvns	r3, r3
 8000434:	4619      	mov	r1, r3
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	400a      	ands	r2, r1
 800043c:	60da      	str	r2, [r3, #12]
	pGpioHandle->pGPIOx->PUPDR|=temp;
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	68d9      	ldr	r1, [r3, #12]
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	68fa      	ldr	r2, [r7, #12]
 800044a:	430a      	orrs	r2, r1
 800044c:	60da      	str	r2, [r3, #12]
	temp=0;
 800044e:	2300      	movs	r3, #0
 8000450:	60fb      	str	r3, [r7, #12]

	/*Initializing Alternate functionality of GPIO*/

	if(pGpioHandle->pGPIOx->MODER==GPIO_MODE_ALTFN)
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	2b02      	cmp	r3, #2
 800045a:	d131      	bne.n	80004c0 <GPIO_Init+0x19a>
	{
		uint8_t temp1=pGpioHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	791b      	ldrb	r3, [r3, #4]
 8000460:	08db      	lsrs	r3, r3, #3
 8000462:	72fb      	strb	r3, [r7, #11]
		uint8_t temp2=pGpioHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	791b      	ldrb	r3, [r3, #4]
 8000468:	f003 0307 	and.w	r3, r3, #7
 800046c:	72bb      	strb	r3, [r7, #10]
		pGpioHandle->pGPIOx->AFR[temp1]&=~(0xF<<4*temp2);
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	7afa      	ldrb	r2, [r7, #11]
 8000474:	3208      	adds	r2, #8
 8000476:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800047a:	7abb      	ldrb	r3, [r7, #10]
 800047c:	009b      	lsls	r3, r3, #2
 800047e:	220f      	movs	r2, #15
 8000480:	fa02 f303 	lsl.w	r3, r2, r3
 8000484:	43db      	mvns	r3, r3
 8000486:	4618      	mov	r0, r3
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	7afa      	ldrb	r2, [r7, #11]
 800048e:	4001      	ands	r1, r0
 8000490:	3208      	adds	r2, #8
 8000492:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGpioHandle->pGPIOx->AFR[temp1]|=pGpioHandle->GPIO_PinConfig.GPIO_PinAltFunMode<<(4*temp2);
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	7afa      	ldrb	r2, [r7, #11]
 800049c:	3208      	adds	r2, #8
 800049e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	7a5b      	ldrb	r3, [r3, #9]
 80004a6:	461a      	mov	r2, r3
 80004a8:	7abb      	ldrb	r3, [r7, #10]
 80004aa:	009b      	lsls	r3, r3, #2
 80004ac:	fa02 f303 	lsl.w	r3, r2, r3
 80004b0:	4618      	mov	r0, r3
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	7afa      	ldrb	r2, [r7, #11]
 80004b8:	4301      	orrs	r1, r0
 80004ba:	3208      	adds	r2, #8
 80004bc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80004c0:	bf00      	nop
 80004c2:	3710      	adds	r7, #16
 80004c4:	46bd      	mov	sp, r7
 80004c6:	bd80      	pop	{r7, pc}

080004c8 <GPIO_PeriClockControl>:

  @Note                    -none
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx,uint8_t EnorDi)
{
 80004c8:	b480      	push	{r7}
 80004ca:	b083      	sub	sp, #12
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	6078      	str	r0, [r7, #4]
 80004d0:	460b      	mov	r3, r1
 80004d2:	70fb      	strb	r3, [r7, #3]

if(EnorDi==ENABLE)
 80004d4:	78fb      	ldrb	r3, [r7, #3]
 80004d6:	2b01      	cmp	r3, #1
 80004d8:	d162      	bne.n	80005a0 <GPIO_PeriClockControl+0xd8>
{
	if(pGPIOx==GPIOA)
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	4a64      	ldr	r2, [pc, #400]	; (8000670 <GPIO_PeriClockControl+0x1a8>)
 80004de:	4293      	cmp	r3, r2
 80004e0:	d106      	bne.n	80004f0 <GPIO_PeriClockControl+0x28>
	{
		GPIOA_PCLK_EN;
 80004e2:	4b64      	ldr	r3, [pc, #400]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80004e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e6:	4a63      	ldr	r2, [pc, #396]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80004e8:	f043 0301 	orr.w	r3, r3, #1
 80004ec:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx==GPIOI)
		{
			GPIOI_PCLK_DI;
		}
	}
}
 80004ee:	e0b9      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
	else if(pGPIOx==GPIOB)
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	4a61      	ldr	r2, [pc, #388]	; (8000678 <GPIO_PeriClockControl+0x1b0>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d106      	bne.n	8000506 <GPIO_PeriClockControl+0x3e>
		GPIOB_PCLK_EN;
 80004f8:	4b5e      	ldr	r3, [pc, #376]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80004fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004fc:	4a5d      	ldr	r2, [pc, #372]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80004fe:	f043 0302 	orr.w	r3, r3, #2
 8000502:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000504:	e0ae      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
	else if(pGPIOx==GPIOC)
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	4a5c      	ldr	r2, [pc, #368]	; (800067c <GPIO_PeriClockControl+0x1b4>)
 800050a:	4293      	cmp	r3, r2
 800050c:	d106      	bne.n	800051c <GPIO_PeriClockControl+0x54>
		GPIOC_PCLK_EN;
 800050e:	4b59      	ldr	r3, [pc, #356]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000510:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000512:	4a58      	ldr	r2, [pc, #352]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000514:	f043 0304 	orr.w	r3, r3, #4
 8000518:	6313      	str	r3, [r2, #48]	; 0x30
}
 800051a:	e0a3      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
	else if(pGPIOx==GPIOD)
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	4a58      	ldr	r2, [pc, #352]	; (8000680 <GPIO_PeriClockControl+0x1b8>)
 8000520:	4293      	cmp	r3, r2
 8000522:	d106      	bne.n	8000532 <GPIO_PeriClockControl+0x6a>
		GPIOD_PCLK_EN;
 8000524:	4b53      	ldr	r3, [pc, #332]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000526:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000528:	4a52      	ldr	r2, [pc, #328]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 800052a:	f043 0308 	orr.w	r3, r3, #8
 800052e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000530:	e098      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
	else if(pGPIOx==GPIOE)
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	4a53      	ldr	r2, [pc, #332]	; (8000684 <GPIO_PeriClockControl+0x1bc>)
 8000536:	4293      	cmp	r3, r2
 8000538:	d106      	bne.n	8000548 <GPIO_PeriClockControl+0x80>
		GPIOE_PCLK_EN;
 800053a:	4b4e      	ldr	r3, [pc, #312]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 800053c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800053e:	4a4d      	ldr	r2, [pc, #308]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000540:	f043 0310 	orr.w	r3, r3, #16
 8000544:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000546:	e08d      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
	else if(pGPIOx==GPIOF)
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	4a4f      	ldr	r2, [pc, #316]	; (8000688 <GPIO_PeriClockControl+0x1c0>)
 800054c:	4293      	cmp	r3, r2
 800054e:	d106      	bne.n	800055e <GPIO_PeriClockControl+0x96>
		GPIOF_PCLK_EN;
 8000550:	4b48      	ldr	r3, [pc, #288]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000552:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000554:	4a47      	ldr	r2, [pc, #284]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000556:	f043 0320 	orr.w	r3, r3, #32
 800055a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800055c:	e082      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
	else if(pGPIOx==GPIOG)
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	4a4a      	ldr	r2, [pc, #296]	; (800068c <GPIO_PeriClockControl+0x1c4>)
 8000562:	4293      	cmp	r3, r2
 8000564:	d106      	bne.n	8000574 <GPIO_PeriClockControl+0xac>
		GPIOG_PCLK_EN;
 8000566:	4b43      	ldr	r3, [pc, #268]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000568:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800056a:	4a42      	ldr	r2, [pc, #264]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 800056c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000570:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000572:	e077      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
	else if(pGPIOx==GPIOH)
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	4a46      	ldr	r2, [pc, #280]	; (8000690 <GPIO_PeriClockControl+0x1c8>)
 8000578:	4293      	cmp	r3, r2
 800057a:	d106      	bne.n	800058a <GPIO_PeriClockControl+0xc2>
		GPIOH_PCLK_EN;
 800057c:	4b3d      	ldr	r3, [pc, #244]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 800057e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000580:	4a3c      	ldr	r2, [pc, #240]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000582:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000586:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000588:	e06c      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
	else if(pGPIOx==GPIOI)
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	4a41      	ldr	r2, [pc, #260]	; (8000694 <GPIO_PeriClockControl+0x1cc>)
 800058e:	4293      	cmp	r3, r2
 8000590:	d168      	bne.n	8000664 <GPIO_PeriClockControl+0x19c>
		GPIOI_PCLK_EN;
 8000592:	4b38      	ldr	r3, [pc, #224]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000594:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000596:	4a37      	ldr	r2, [pc, #220]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000598:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800059c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800059e:	e061      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx==GPIOA)
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	4a33      	ldr	r2, [pc, #204]	; (8000670 <GPIO_PeriClockControl+0x1a8>)
 80005a4:	4293      	cmp	r3, r2
 80005a6:	d106      	bne.n	80005b6 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI;
 80005a8:	4b32      	ldr	r3, [pc, #200]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80005aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005ac:	4a31      	ldr	r2, [pc, #196]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80005ae:	f023 0301 	bic.w	r3, r3, #1
 80005b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005b4:	e056      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOB)
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	4a2f      	ldr	r2, [pc, #188]	; (8000678 <GPIO_PeriClockControl+0x1b0>)
 80005ba:	4293      	cmp	r3, r2
 80005bc:	d106      	bne.n	80005cc <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI;
 80005be:	4b2d      	ldr	r3, [pc, #180]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80005c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005c2:	4a2c      	ldr	r2, [pc, #176]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80005c4:	f023 0302 	bic.w	r3, r3, #2
 80005c8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005ca:	e04b      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOC)
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	4a2b      	ldr	r2, [pc, #172]	; (800067c <GPIO_PeriClockControl+0x1b4>)
 80005d0:	4293      	cmp	r3, r2
 80005d2:	d106      	bne.n	80005e2 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI;
 80005d4:	4b27      	ldr	r3, [pc, #156]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80005d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005d8:	4a26      	ldr	r2, [pc, #152]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80005da:	f023 0304 	bic.w	r3, r3, #4
 80005de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005e0:	e040      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOD)
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	4a26      	ldr	r2, [pc, #152]	; (8000680 <GPIO_PeriClockControl+0x1b8>)
 80005e6:	4293      	cmp	r3, r2
 80005e8:	d106      	bne.n	80005f8 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI;
 80005ea:	4b22      	ldr	r3, [pc, #136]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80005ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005ee:	4a21      	ldr	r2, [pc, #132]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 80005f0:	f023 0308 	bic.w	r3, r3, #8
 80005f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005f6:	e035      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOE)
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	4a22      	ldr	r2, [pc, #136]	; (8000684 <GPIO_PeriClockControl+0x1bc>)
 80005fc:	4293      	cmp	r3, r2
 80005fe:	d106      	bne.n	800060e <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI;
 8000600:	4b1c      	ldr	r3, [pc, #112]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000602:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000604:	4a1b      	ldr	r2, [pc, #108]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000606:	f023 0310 	bic.w	r3, r3, #16
 800060a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800060c:	e02a      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOF)
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	4a1d      	ldr	r2, [pc, #116]	; (8000688 <GPIO_PeriClockControl+0x1c0>)
 8000612:	4293      	cmp	r3, r2
 8000614:	d106      	bne.n	8000624 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI;
 8000616:	4b17      	ldr	r3, [pc, #92]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000618:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800061a:	4a16      	ldr	r2, [pc, #88]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 800061c:	f023 0320 	bic.w	r3, r3, #32
 8000620:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000622:	e01f      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOG)
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	4a19      	ldr	r2, [pc, #100]	; (800068c <GPIO_PeriClockControl+0x1c4>)
 8000628:	4293      	cmp	r3, r2
 800062a:	d106      	bne.n	800063a <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI;
 800062c:	4b11      	ldr	r3, [pc, #68]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 800062e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000630:	4a10      	ldr	r2, [pc, #64]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000632:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000636:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000638:	e014      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOH)
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	4a14      	ldr	r2, [pc, #80]	; (8000690 <GPIO_PeriClockControl+0x1c8>)
 800063e:	4293      	cmp	r3, r2
 8000640:	d106      	bne.n	8000650 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI;
 8000642:	4b0c      	ldr	r3, [pc, #48]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000644:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000646:	4a0b      	ldr	r2, [pc, #44]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 8000648:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800064c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800064e:	e009      	b.n	8000664 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOI)
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	4a10      	ldr	r2, [pc, #64]	; (8000694 <GPIO_PeriClockControl+0x1cc>)
 8000654:	4293      	cmp	r3, r2
 8000656:	d105      	bne.n	8000664 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI;
 8000658:	4b06      	ldr	r3, [pc, #24]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 800065a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800065c:	4a05      	ldr	r2, [pc, #20]	; (8000674 <GPIO_PeriClockControl+0x1ac>)
 800065e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000662:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000664:	bf00      	nop
 8000666:	370c      	adds	r7, #12
 8000668:	46bd      	mov	sp, r7
 800066a:	bc80      	pop	{r7}
 800066c:	4770      	bx	lr
 800066e:	bf00      	nop
 8000670:	40020000 	.word	0x40020000
 8000674:	40023800 	.word	0x40023800
 8000678:	40020400 	.word	0x40020400
 800067c:	40020800 	.word	0x40020800
 8000680:	40020c00 	.word	0x40020c00
 8000684:	40021000 	.word	0x40021000
 8000688:	40021400 	.word	0x40021400
 800068c:	40021800 	.word	0x40021800
 8000690:	40021c00 	.word	0x40021c00
 8000694:	40022000 	.word	0x40022000

08000698 <SPI_Init>:


/*For SPI Initialization/Deinitialization*/

void SPI_Init(SPI_Handle_t* pSPIHandle)
{
 8000698:	b580      	push	{r7, lr}
 800069a:	b084      	sub	sp, #16
 800069c:	af00      	add	r7, sp, #0
 800069e:	6078      	str	r0, [r7, #4]
	/*Enabling the peripheral clock*/
	SPI_PeriClockControl(pSPIHandle->pSPIx, ENABLE);
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	2101      	movs	r1, #1
 80006a6:	4618      	mov	r0, r3
 80006a8:	f000 f852 	bl	8000750 <SPI_PeriClockControl>
	uint32_t tempreg=0;
 80006ac:	2300      	movs	r3, #0
 80006ae:	60fb      	str	r3, [r7, #12]
/*SPI Device mode*/

	tempreg|=pSPIHandle->SPI_PinConfig.SPI_DeviceMode<<2;
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	791b      	ldrb	r3, [r3, #4]
 80006b4:	009b      	lsls	r3, r3, #2
 80006b6:	461a      	mov	r2, r3
 80006b8:	68fb      	ldr	r3, [r7, #12]
 80006ba:	4313      	orrs	r3, r2
 80006bc:	60fb      	str	r3, [r7, #12]

/*SPI BusConfig*/

	if(pSPIHandle->SPI_PinConfig.SPI_BusConfig==SPI_BusConfig_FD)
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	795b      	ldrb	r3, [r3, #5]
 80006c2:	2b00      	cmp	r3, #0
 80006c4:	d104      	bne.n	80006d0 <SPI_Init+0x38>
	{
		//bidi mode must be cleared
		tempreg&=~(1<<15);
 80006c6:	68fb      	ldr	r3, [r7, #12]
 80006c8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80006cc:	60fb      	str	r3, [r7, #12]
 80006ce:	e014      	b.n	80006fa <SPI_Init+0x62>
	}
	else if(pSPIHandle->SPI_PinConfig.SPI_BusConfig==SPI_BusConfig_HD)
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	795b      	ldrb	r3, [r3, #5]
 80006d4:	2b01      	cmp	r3, #1
 80006d6:	d104      	bne.n	80006e2 <SPI_Init+0x4a>
	{
		//bidi mode must be set
		tempreg|=(1<<15);
 80006d8:	68fb      	ldr	r3, [r7, #12]
 80006da:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80006de:	60fb      	str	r3, [r7, #12]
 80006e0:	e00b      	b.n	80006fa <SPI_Init+0x62>
	}
	else if(pSPIHandle->SPI_PinConfig.SPI_BusConfig==SPI_BusConfig_Simplex_RXonly)
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	795b      	ldrb	r3, [r3, #5]
 80006e6:	2b02      	cmp	r3, #2
 80006e8:	d107      	bne.n	80006fa <SPI_Init+0x62>
	{
		//bidi mode must be cleared
		tempreg&=~(1<<15);
 80006ea:	68fb      	ldr	r3, [r7, #12]
 80006ec:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80006f0:	60fb      	str	r3, [r7, #12]
		//rx only bit must be set
		tempreg|=(1<<10);
 80006f2:	68fb      	ldr	r3, [r7, #12]
 80006f4:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80006f8:	60fb      	str	r3, [r7, #12]
	}

/*SPI Data frame format*/
	tempreg|=pSPIHandle->SPI_PinConfig.SPI_DFF<<11;
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	799b      	ldrb	r3, [r3, #6]
 80006fe:	02db      	lsls	r3, r3, #11
 8000700:	461a      	mov	r2, r3
 8000702:	68fb      	ldr	r3, [r7, #12]
 8000704:	4313      	orrs	r3, r2
 8000706:	60fb      	str	r3, [r7, #12]
/*SPI CPHA*/
	tempreg|=pSPIHandle->SPI_PinConfig.SPI_CPHA<<0;
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	79db      	ldrb	r3, [r3, #7]
 800070c:	461a      	mov	r2, r3
 800070e:	68fb      	ldr	r3, [r7, #12]
 8000710:	4313      	orrs	r3, r2
 8000712:	60fb      	str	r3, [r7, #12]
/*SPI CPOL*/
	tempreg|=pSPIHandle->SPI_PinConfig.SPI_CPOL<<1;
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	7a1b      	ldrb	r3, [r3, #8]
 8000718:	005b      	lsls	r3, r3, #1
 800071a:	461a      	mov	r2, r3
 800071c:	68fb      	ldr	r3, [r7, #12]
 800071e:	4313      	orrs	r3, r2
 8000720:	60fb      	str	r3, [r7, #12]
/*SPI SSM*/
	tempreg|=pSPIHandle->SPI_PinConfig.SPI_SSM<<9;
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	7a5b      	ldrb	r3, [r3, #9]
 8000726:	025b      	lsls	r3, r3, #9
 8000728:	461a      	mov	r2, r3
 800072a:	68fb      	ldr	r3, [r7, #12]
 800072c:	4313      	orrs	r3, r2
 800072e:	60fb      	str	r3, [r7, #12]
/*SPI Sclk Speed*/
	tempreg|=pSPIHandle->SPI_PinConfig.SPI_SclkSpeed<<3;
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	7a9b      	ldrb	r3, [r3, #10]
 8000734:	00db      	lsls	r3, r3, #3
 8000736:	461a      	mov	r2, r3
 8000738:	68fb      	ldr	r3, [r7, #12]
 800073a:	4313      	orrs	r3, r2
 800073c:	60fb      	str	r3, [r7, #12]

	pSPIHandle->pSPIx->CR1=tempreg;
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	681b      	ldr	r3, [r3, #0]
 8000742:	68fa      	ldr	r2, [r7, #12]
 8000744:	601a      	str	r2, [r3, #0]
}
 8000746:	bf00      	nop
 8000748:	3710      	adds	r7, #16
 800074a:	46bd      	mov	sp, r7
 800074c:	bd80      	pop	{r7, pc}
	...

08000750 <SPI_PeriClockControl>:
}

/*For SPI SClock Control*/

void SPI_PeriClockControl(SPI_RegDef_t *pSPIx,uint8_t EnorDi)
{
 8000750:	b480      	push	{r7}
 8000752:	b083      	sub	sp, #12
 8000754:	af00      	add	r7, sp, #0
 8000756:	6078      	str	r0, [r7, #4]
 8000758:	460b      	mov	r3, r1
 800075a:	70fb      	strb	r3, [r7, #3]
if(EnorDi==ENABLE)
 800075c:	78fb      	ldrb	r3, [r7, #3]
 800075e:	2b01      	cmp	r3, #1
 8000760:	d120      	bne.n	80007a4 <SPI_PeriClockControl+0x54>
{
	if(pSPIx==SPI1)
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	4a22      	ldr	r2, [pc, #136]	; (80007f0 <SPI_PeriClockControl+0xa0>)
 8000766:	4293      	cmp	r3, r2
 8000768:	d106      	bne.n	8000778 <SPI_PeriClockControl+0x28>
	{
		SPI1_PCLK_EN;
 800076a:	4b22      	ldr	r3, [pc, #136]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 800076c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800076e:	4a21      	ldr	r2, [pc, #132]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 8000770:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000774:	6453      	str	r3, [r2, #68]	; 0x44
		else if(pSPIx==SPI2)
		{
			SPI3_PCLK_DI;
		}
}
}
 8000776:	e035      	b.n	80007e4 <SPI_PeriClockControl+0x94>
	else if(pSPIx==SPI2)
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	4a1f      	ldr	r2, [pc, #124]	; (80007f8 <SPI_PeriClockControl+0xa8>)
 800077c:	4293      	cmp	r3, r2
 800077e:	d106      	bne.n	800078e <SPI_PeriClockControl+0x3e>
		SPI2_PCLK_EN;
 8000780:	4b1c      	ldr	r3, [pc, #112]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 8000782:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000784:	4a1b      	ldr	r2, [pc, #108]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 8000786:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800078a:	6413      	str	r3, [r2, #64]	; 0x40
}
 800078c:	e02a      	b.n	80007e4 <SPI_PeriClockControl+0x94>
	else if(pSPIx==SPI2)
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	4a19      	ldr	r2, [pc, #100]	; (80007f8 <SPI_PeriClockControl+0xa8>)
 8000792:	4293      	cmp	r3, r2
 8000794:	d126      	bne.n	80007e4 <SPI_PeriClockControl+0x94>
		SPI3_PCLK_EN;
 8000796:	4b17      	ldr	r3, [pc, #92]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 8000798:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800079a:	4a16      	ldr	r2, [pc, #88]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 800079c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80007a0:	6413      	str	r3, [r2, #64]	; 0x40
}
 80007a2:	e01f      	b.n	80007e4 <SPI_PeriClockControl+0x94>
		if(pSPIx==SPI1)
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	4a12      	ldr	r2, [pc, #72]	; (80007f0 <SPI_PeriClockControl+0xa0>)
 80007a8:	4293      	cmp	r3, r2
 80007aa:	d106      	bne.n	80007ba <SPI_PeriClockControl+0x6a>
			SPI1_PCLK_DI;
 80007ac:	4b11      	ldr	r3, [pc, #68]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 80007ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80007b0:	4a10      	ldr	r2, [pc, #64]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 80007b2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80007b6:	6453      	str	r3, [r2, #68]	; 0x44
}
 80007b8:	e014      	b.n	80007e4 <SPI_PeriClockControl+0x94>
		else if(pSPIx==SPI2)
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	4a0e      	ldr	r2, [pc, #56]	; (80007f8 <SPI_PeriClockControl+0xa8>)
 80007be:	4293      	cmp	r3, r2
 80007c0:	d106      	bne.n	80007d0 <SPI_PeriClockControl+0x80>
			SPI2_PCLK_EN;
 80007c2:	4b0c      	ldr	r3, [pc, #48]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 80007c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80007c6:	4a0b      	ldr	r2, [pc, #44]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 80007c8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80007cc:	6413      	str	r3, [r2, #64]	; 0x40
}
 80007ce:	e009      	b.n	80007e4 <SPI_PeriClockControl+0x94>
		else if(pSPIx==SPI2)
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	4a09      	ldr	r2, [pc, #36]	; (80007f8 <SPI_PeriClockControl+0xa8>)
 80007d4:	4293      	cmp	r3, r2
 80007d6:	d105      	bne.n	80007e4 <SPI_PeriClockControl+0x94>
			SPI3_PCLK_DI;
 80007d8:	4b06      	ldr	r3, [pc, #24]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 80007da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80007dc:	4a05      	ldr	r2, [pc, #20]	; (80007f4 <SPI_PeriClockControl+0xa4>)
 80007de:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80007e2:	6413      	str	r3, [r2, #64]	; 0x40
}
 80007e4:	bf00      	nop
 80007e6:	370c      	adds	r7, #12
 80007e8:	46bd      	mov	sp, r7
 80007ea:	bc80      	pop	{r7}
 80007ec:	4770      	bx	lr
 80007ee:	bf00      	nop
 80007f0:	400133ff 	.word	0x400133ff
 80007f4:	40023800 	.word	0x40023800
 80007f8:	40003bff 	.word	0x40003bff

080007fc <SPI_SendData>:

/*Data send and receive*/

void SPI_SendData(SPI_RegDef_t *pSPIx,uint8_t *TxBuffer,uint32_t Len)
{
 80007fc:	b480      	push	{r7}
 80007fe:	b085      	sub	sp, #20
 8000800:	af00      	add	r7, sp, #0
 8000802:	60f8      	str	r0, [r7, #12]
 8000804:	60b9      	str	r1, [r7, #8]
 8000806:	607a      	str	r2, [r7, #4]
while(Len)
 8000808:	e026      	b.n	8000858 <SPI_SendData+0x5c>
{
	while(!(pSPIx->SR & (1<<1)));     //wait until TXE is 1 i.e empty.
 800080a:	bf00      	nop
 800080c:	68fb      	ldr	r3, [r7, #12]
 800080e:	689b      	ldr	r3, [r3, #8]
 8000810:	f003 0302 	and.w	r3, r3, #2
 8000814:	2b00      	cmp	r3, #0
 8000816:	d0f9      	beq.n	800080c <SPI_SendData+0x10>
	//while(get_FlagStatus(pSPIx,SPI_TXE_FLAG)==Flag_Reset());
	if(pSPIx->CR1 & (1<<11))      //DFF bit of CR1 register
 8000818:	68fb      	ldr	r3, [r7, #12]
 800081a:	681b      	ldr	r3, [r3, #0]
 800081c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000820:	2b00      	cmp	r3, #0
 8000822:	d00e      	beq.n	8000842 <SPI_SendData+0x46>
	{
		//16 bit dff
		pSPIx->DR=*((uint16_t*)TxBuffer);
 8000824:	68bb      	ldr	r3, [r7, #8]
 8000826:	881b      	ldrh	r3, [r3, #0]
 8000828:	461a      	mov	r2, r3
 800082a:	68fb      	ldr	r3, [r7, #12]
 800082c:	60da      	str	r2, [r3, #12]
		Len--;
 800082e:	687b      	ldr	r3, [r7, #4]
 8000830:	3b01      	subs	r3, #1
 8000832:	607b      	str	r3, [r7, #4]
		Len--;
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	3b01      	subs	r3, #1
 8000838:	607b      	str	r3, [r7, #4]
		(uint16_t*)TxBuffer++;
 800083a:	68bb      	ldr	r3, [r7, #8]
 800083c:	3301      	adds	r3, #1
 800083e:	60bb      	str	r3, [r7, #8]
 8000840:	e00a      	b.n	8000858 <SPI_SendData+0x5c>
	}
	else
	{
		//8 bit dff
		pSPIx->DR=*(TxBuffer);
 8000842:	68bb      	ldr	r3, [r7, #8]
 8000844:	781b      	ldrb	r3, [r3, #0]
 8000846:	461a      	mov	r2, r3
 8000848:	68fb      	ldr	r3, [r7, #12]
 800084a:	60da      	str	r2, [r3, #12]
		Len--;
 800084c:	687b      	ldr	r3, [r7, #4]
 800084e:	3b01      	subs	r3, #1
 8000850:	607b      	str	r3, [r7, #4]
		TxBuffer++;
 8000852:	68bb      	ldr	r3, [r7, #8]
 8000854:	3301      	adds	r3, #1
 8000856:	60bb      	str	r3, [r7, #8]
while(Len)
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	2b00      	cmp	r3, #0
 800085c:	d1d5      	bne.n	800080a <SPI_SendData+0xe>
	}

}
}
 800085e:	bf00      	nop
 8000860:	3714      	adds	r7, #20
 8000862:	46bd      	mov	sp, r7
 8000864:	bc80      	pop	{r7}
 8000866:	4770      	bx	lr

08000868 <SPI_peripheral_control>:
			RxBuffer++;
		}
	}}

void SPI_peripheral_control(SPI_RegDef_t *pSPIx,uint8_t EnorDi)
{
 8000868:	b480      	push	{r7}
 800086a:	b083      	sub	sp, #12
 800086c:	af00      	add	r7, sp, #0
 800086e:	6078      	str	r0, [r7, #4]
 8000870:	460b      	mov	r3, r1
 8000872:	70fb      	strb	r3, [r7, #3]
	if(EnorDi==ENABLE)
 8000874:	78fb      	ldrb	r3, [r7, #3]
 8000876:	2b01      	cmp	r3, #1
 8000878:	d106      	bne.n	8000888 <SPI_peripheral_control+0x20>
	{
		pSPIx->CR1 |=(1<<6);
 800087a:	687b      	ldr	r3, [r7, #4]
 800087c:	681b      	ldr	r3, [r3, #0]
 800087e:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000882:	687b      	ldr	r3, [r7, #4]
 8000884:	601a      	str	r2, [r3, #0]
	}
	else
	{
		pSPIx->CR1 &=~(1<<6);
	}
}
 8000886:	e005      	b.n	8000894 <SPI_peripheral_control+0x2c>
		pSPIx->CR1 &=~(1<<6);
 8000888:	687b      	ldr	r3, [r7, #4]
 800088a:	681b      	ldr	r3, [r3, #0]
 800088c:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000890:	687b      	ldr	r3, [r7, #4]
 8000892:	601a      	str	r2, [r3, #0]
}
 8000894:	bf00      	nop
 8000896:	370c      	adds	r7, #12
 8000898:	46bd      	mov	sp, r7
 800089a:	bc80      	pop	{r7}
 800089c:	4770      	bx	lr

0800089e <SPI_SSOE_config>:
			pSPIx->CR1 &=~(1<<8);
		}
}

void SPI_SSOE_config(SPI_RegDef_t *pSPIx,uint8_t EnorDi)
{
 800089e:	b480      	push	{r7}
 80008a0:	b083      	sub	sp, #12
 80008a2:	af00      	add	r7, sp, #0
 80008a4:	6078      	str	r0, [r7, #4]
 80008a6:	460b      	mov	r3, r1
 80008a8:	70fb      	strb	r3, [r7, #3]
	if(EnorDi==ENABLE)
 80008aa:	78fb      	ldrb	r3, [r7, #3]
 80008ac:	2b01      	cmp	r3, #1
 80008ae:	d106      	bne.n	80008be <SPI_SSOE_config+0x20>
		{
			pSPIx->CR2 |=(1<<2);
 80008b0:	687b      	ldr	r3, [r7, #4]
 80008b2:	685b      	ldr	r3, [r3, #4]
 80008b4:	f043 0204 	orr.w	r2, r3, #4
 80008b8:	687b      	ldr	r3, [r7, #4]
 80008ba:	605a      	str	r2, [r3, #4]
		}
		else
		{
			pSPIx->CR2 &=~(1<<2);
		}
}
 80008bc:	e005      	b.n	80008ca <SPI_SSOE_config+0x2c>
			pSPIx->CR2 &=~(1<<2);
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	685b      	ldr	r3, [r3, #4]
 80008c2:	f023 0204 	bic.w	r2, r3, #4
 80008c6:	687b      	ldr	r3, [r7, #4]
 80008c8:	605a      	str	r2, [r3, #4]
}
 80008ca:	bf00      	nop
 80008cc:	370c      	adds	r7, #12
 80008ce:	46bd      	mov	sp, r7
 80008d0:	bc80      	pop	{r7}
 80008d2:	4770      	bx	lr

080008d4 <__libc_init_array>:
 80008d4:	b570      	push	{r4, r5, r6, lr}
 80008d6:	4e0d      	ldr	r6, [pc, #52]	; (800090c <__libc_init_array+0x38>)
 80008d8:	4c0d      	ldr	r4, [pc, #52]	; (8000910 <__libc_init_array+0x3c>)
 80008da:	1ba4      	subs	r4, r4, r6
 80008dc:	10a4      	asrs	r4, r4, #2
 80008de:	2500      	movs	r5, #0
 80008e0:	42a5      	cmp	r5, r4
 80008e2:	d109      	bne.n	80008f8 <__libc_init_array+0x24>
 80008e4:	4e0b      	ldr	r6, [pc, #44]	; (8000914 <__libc_init_array+0x40>)
 80008e6:	4c0c      	ldr	r4, [pc, #48]	; (8000918 <__libc_init_array+0x44>)
 80008e8:	f000 f818 	bl	800091c <_init>
 80008ec:	1ba4      	subs	r4, r4, r6
 80008ee:	10a4      	asrs	r4, r4, #2
 80008f0:	2500      	movs	r5, #0
 80008f2:	42a5      	cmp	r5, r4
 80008f4:	d105      	bne.n	8000902 <__libc_init_array+0x2e>
 80008f6:	bd70      	pop	{r4, r5, r6, pc}
 80008f8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80008fc:	4798      	blx	r3
 80008fe:	3501      	adds	r5, #1
 8000900:	e7ee      	b.n	80008e0 <__libc_init_array+0xc>
 8000902:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000906:	4798      	blx	r3
 8000908:	3501      	adds	r5, #1
 800090a:	e7f2      	b.n	80008f2 <__libc_init_array+0x1e>
 800090c:	08000940 	.word	0x08000940
 8000910:	08000940 	.word	0x08000940
 8000914:	08000940 	.word	0x08000940
 8000918:	08000944 	.word	0x08000944

0800091c <_init>:
 800091c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800091e:	bf00      	nop
 8000920:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000922:	bc08      	pop	{r3}
 8000924:	469e      	mov	lr, r3
 8000926:	4770      	bx	lr

08000928 <_fini>:
 8000928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800092a:	bf00      	nop
 800092c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800092e:	bc08      	pop	{r3}
 8000930:	469e      	mov	lr, r3
 8000932:	4770      	bx	lr
